{"version":3,"sources":["images/blank.png","images/blue.png","images/Green.png","images/orange.png","images/purple-candy.png","images/red-candy.png","images/yellow-candy.png","Context/ScoreContext.js","components/ScoreBoard.js","components/Database.js","components/LeaderBoard.js","App.js","index.js"],"names":["ScoreContext","createContext","ScoreBoard","props","useContext","setDATA","DATA","useEffect","Score","score","className","Database","console","log","onSubmit","e","preventDefault","axios","post","then","res","alert","status","window","location","reload","catch","err","required","type","onChange","Username","target","value","LeaderBoard","useState","apidata","setApidata","get","data","length","map","val","index","style","display","candyColors","redCandy","blueCandy","purpleCandy","orangeCandy","greenCandy","yellowCandy","App","currentColorArrangement","setCurrentColorArrangement","squareBeingDragged","setSquareBeingDragged","squareBeingReplaced","setSquareBeingReplaced","scoreDislpay","setScoreDislpay","checkForColumnOfFour","i","colummnOfFour","width","decidedColor","isBlank","blank","every","square","forEach","checkForRowOfFour","RowOfFour","includes","checkForColumnOfThree","colummnOfThree","checkForRowOfThree","RowOfThree","dragStart","dragDrop","randomColorArrangement","randomColor","Math","floor","random","push","createBoard","timer","setInterval","randomNumber","moveIntoSquareBelow","clearInterval","dragEnd","squareBeingDraggedId","parseInt","getAttribute","squareBeingReplacedId","validMove","isAColumnOfFour","isARowOfFour","isAColumnOfThree","isARowOfThree","Provider","candyColor","src","alt","draggable","onDragStart","onDragOver","onDragEnter","onDragLeave","onDrop","onDragEnd","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bfa8b9d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blank.fbcb9179.png\";","export default __webpack_public_path__ + \"static/media/blue.73120c15.png\";","export default __webpack_public_path__ + \"static/media/Green.599f7016.png\";","export default __webpack_public_path__ + \"static/media/orange.f106b2cd.png\";","export default __webpack_public_path__ + \"static/media/purple-candy.ae25b8a5.png\";","export default __webpack_public_path__ + \"static/media/red-candy.3658b37c.png\";","export default __webpack_public_path__ + \"static/media/yellow-candy.a3d87a9b.png\";","import {createContext} from \"react\";\r\n\r\nexport const ScoreContext = createContext({})","import React,{useContext,useEffect} from 'react'\r\nimport { ScoreContext } from '../Context/ScoreContext'\r\n\r\nconst ScoreBoard = (props) => {\r\n\r\n  const {setDATA,DATA} = useContext(ScoreContext)\r\n  useEffect(() => {\r\n    setDATA({\r\n      ...DATA,\r\n      Score:props.score\r\n    })\r\n  }, [props.score]);\r\n\r\n  return (\r\n    <div className=\"score-board\">\r\n      <h2>{props.score}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScoreBoard\r\n","import React, { useContext} from 'react'\r\nimport axios from 'axios'\r\nimport { ScoreContext } from '../Context/ScoreContext'\r\n\r\n\r\nconst Database = () => {\r\n\r\n  const{DATA, setDATA} =  useContext(ScoreContext);\r\n\r\n  const changeHandler=(e)=>{\r\n    e.preventDefault()\r\n    setDATA({\r\n      ...DATA,\r\n      Username:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  const submitHandler = (e)=>{\r\n    e.preventDefault()\r\n    axios.post(\"https://candytwist-node-deploy.herokuapp.com/score\",DATA)\r\n    .then(res=>{alert(res.status===200?\"Score added\":\"Something went wrong!\")\r\n  window.location.reload()\r\n  })\r\n    .catch(err=>console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {console.log(DATA)}\r\n      <form onSubmit={submitHandler}>\r\n      <input required type=\"text\" onChange={changeHandler} />\r\n      <button type='submit'>Submit Score</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Database\r\n","import axios from 'axios';\r\nimport React,{useEffect,useState} from 'react'\r\n\r\nconst LeaderBoard = () => {\r\n    const [apidata, setApidata] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://candytwist-node-deploy.herokuapp.com/scoreBoard\").then(res=>setApidata(res.data)).catch(err=>console.log(err))\r\n    }, []);\r\n\r\n  return (\r\n    <div>\r\n        {\r\n            apidata.length?\r\n            apidata.map((val,index)=>{return(\r\n                <div style={{display:\"flex\"}} key ={index}>\r\n                    <p>{val.Score}</p>\r\n                    <p>{val.Username}</p>\r\n                </div>\r\n            )}\r\n            )\r\n            :\"\"\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeaderBoard","//importing hooks\nimport { useState, useEffect } from \"react\"\n//importing images\nimport blank from './images/blank.png'\nimport blueCandy from './images/blue.png'\nimport greenCandy from './images/Green.png'\nimport orangeCandy from './images/orange.png'\nimport purpleCandy from './images/purple-candy.png'\nimport redCandy from './images/red-candy.png'\nimport yellowCandy from './images/yellow-candy.png'\n//components\nimport ScoreBoard from \"./components/ScoreBoard\"\nimport Database from \"./components/Database\"\nimport LeaderBoard from \"./components/LeaderBoard\"\n//context\nimport {ScoreContext} from './Context/ScoreContext'\n\n\n\nconst width = 8\nconst candyColors = [redCandy, blueCandy, purpleCandy, orangeCandy, greenCandy, yellowCandy]\n\n\nfunction App() {\n  const [currentColorArrangement, setCurrentColorArrangement] = useState([])\n  const [squareBeingDragged, setSquareBeingDragged] = useState()\n  const [squareBeingReplaced, setSquareBeingReplaced] = useState()\n  const [scoreDislpay, setScoreDislpay] = useState(0)\n\n  const [DATA, setDATA] = useState({\n    Username: \"\",\n    Score: \"\"\n  })\n\n\n  const createBoard = () => {\n    const randomColorArrangement = []\n    for (let i = 0; i < width * width; i++) {\n      const randomColor = candyColors[Math.floor(Math.random() * candyColors.length)]\n      randomColorArrangement.push(randomColor)\n    }\n    setCurrentColorArrangement(randomColorArrangement)\n  }\n  const checkForColumnOfFour = () => {\n    for (let i = 0; i <= 39; i++) {\n      const colummnOfFour = [i, i + width, i + width * 2, i + width * 3]\n      const decidedColor = currentColorArrangement[i]\n\n      const isBlank = currentColorArrangement[i] === blank\n\n      if (colummnOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n        setScoreDislpay((score) => score + 4)\n        colummnOfFour.forEach(square => currentColorArrangement[square] = blank)\n        return true\n\n      }\n    }\n  }\n  const checkForRowOfFour = () => {\n    for (let i = 0; i < 64; i++) {\n      const RowOfFour = [i, i + 1, i + 2, i + 3]\n      const decidedColor = currentColorArrangement[i]\n      const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64]\n      const isBlank = currentColorArrangement[i] === blank\n\n      if (notValid.includes(i)) continue\n\n      if (RowOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n        setScoreDislpay((score) => score + 4)\n        RowOfFour.forEach(square => currentColorArrangement[square] = blank)\n        return true\n\n      }\n    }\n  }\n  const checkForColumnOfThree = () => {\n    for (let i = 0; i <= 47; i++) {\n      const colummnOfThree = [i, i + width, i + width * 2]\n      const decidedColor = currentColorArrangement[i]\n      const isBlank = currentColorArrangement[i] === blank\n\n\n      if (colummnOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n        setScoreDislpay((score) => score + 3)\n        colummnOfThree.forEach(square => currentColorArrangement[square] = blank)\n        return true\n\n      }\n    }\n  }\n  const checkForRowOfThree = () => {\n    for (let i = 0; i < 64; i++) {\n      const RowOfThree = [i, i + 1, i + 2]\n      const decidedColor = currentColorArrangement[i]\n      const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64]\n      const isBlank = currentColorArrangement[i] === blank\n\n      if (notValid.includes(i)) continue\n\n      if (RowOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n        setScoreDislpay((score) => score + 3)\n        RowOfThree.forEach(square => currentColorArrangement[square] = blank)\n        return true\n      }\n    }\n  }\n\n  const moveIntoSquareBelow = () => {\n    for (let i = 0; i < 64 - width; i++) {\n      const firstRow = [0, 1, 2, 3, 4, 5, 6, 7]\n      const isFirstRow = firstRow.includes(i)\n      if (isFirstRow && currentColorArrangement[i] === blank) {\n        let randomNumber = Math.floor(Math.random() * candyColors.length)\n        currentColorArrangement[i] = candyColors[randomNumber]\n      }\n      if ((currentColorArrangement[i + width]) === blank) {\n        currentColorArrangement[i + width] = currentColorArrangement[i]\n        currentColorArrangement[i] = blank\n      }\n    }\n  }\n\n  const dragStart = (e) => {\n    setSquareBeingDragged(e.target)\n  }\n  const dragDrop = (e) => {\n    setSquareBeingReplaced(e.target)\n  }\n  \n\n  useEffect(() => {\n    createBoard()\n  }, [])\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      checkForColumnOfFour()\n      checkForRowOfFour()\n      checkForColumnOfThree()\n      checkForRowOfThree()\n      moveIntoSquareBelow()\n      setCurrentColorArrangement([...currentColorArrangement])\n    }, 100)\n    return () => clearInterval(timer)\n  }, [checkForColumnOfFour, checkForRowOfFour, currentColorArrangement, checkForRowOfThree, checkForColumnOfThree,])\n\n  const dragEnd = (e) => {\n    const squareBeingDraggedId = parseInt(squareBeingDragged.getAttribute('data-id'))\n    const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'))\n\n    const validMoves = [\n      squareBeingDraggedId - 1,\n      squareBeingDraggedId - width,\n      squareBeingDraggedId + 1,\n      squareBeingDraggedId + width\n    ]\n\n    const validMove = validMoves.includes(squareBeingReplacedId)\n\n    console.log(validMove);\n\n    \n    if (validMove) {\n      currentColorArrangement[squareBeingReplacedId] = squareBeingDragged.getAttribute('src')\n      currentColorArrangement[squareBeingDraggedId] = squareBeingReplaced.getAttribute('src')\n      \n      const isAColumnOfFour = checkForColumnOfFour()\n      const isARowOfFour = checkForRowOfFour()\n      const isAColumnOfThree = checkForColumnOfThree()\n      const isARowOfThree = checkForRowOfThree()\n\n      if (squareBeingReplacedId &&\n        (isAColumnOfFour || isARowOfFour || isAColumnOfThree || isARowOfThree)) {\n        setSquareBeingDragged(null)\n        setSquareBeingDragged(null)\n      } else {\n        currentColorArrangement[squareBeingReplacedId] = squareBeingReplaced.getAttribute('src')\n        currentColorArrangement[squareBeingDraggedId] = squareBeingDragged.getAttribute('src')\n        setCurrentColorArrangement([...currentColorArrangement])\n      }\n    }\n  }\n\n  return (\n    <ScoreContext.Provider value={{DATA, setDATA}}>\n    <div className=\"app\">\n      <div className=\"game\">\n        {currentColorArrangement.map((candyColor, index) => (\n          <img\n            key={index}\n            // style={{ backgroundColor: candyColor }}\n            src={candyColor}\n            alt={candyColor}\n            data-id={index}\n            draggable={true}\n            onDragStart={dragStart}\n            onDragOver={(e) => e.preventDefault()}\n            onDragEnter={(e) => e.preventDefault()}\n            onDragLeave={(e) => e.preventDefault()}\n            onDrop={dragDrop}\n            onDragEnd={dragEnd}\n          />\n        ))}\n      </div>\n      <ScoreBoard score={scoreDislpay} />\n      <Database/>\n      <LeaderBoard/>\n    </div>\n    </ScoreContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}