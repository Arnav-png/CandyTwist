{"version":3,"sources":["components/LeaderBoard.module.css","components/Database.module.css","images/blank.png","images/blue.png","images/Green.png","images/orange.png","images/purple-candy.png","images/red-candy.png","images/yellow-candy.png","images/BG.png","Context/ScoreContext.js","components/ScoreBoard.js","components/Database.js","components/LeaderBoard.js","App.js","components/FullLeaderBoard.js","index.js"],"names":["module","exports","ScoreContext","createContext","ScoreBoard","props","useContext","setDATA","DATA","useEffect","Score","score","className","Database","console","log","Styles","main","onSubmit","e","preventDefault","axios","post","then","res","alert","status","window","location","reload","catch","err","required","type","onChange","Username","target","value","placeholder","LeaderBoard","useState","apidata","setApidata","navigate","useNavigate","get","data","Style","length","map","val","index","score_link","onClick","candyColors","redCandy","blueCandy","purpleCandy","orangeCandy","greenCandy","yellowCandy","App","currentColorArrangement","setCurrentColorArrangement","squareBeingDragged","setSquareBeingDragged","squareBeingReplaced","setSquareBeingReplaced","scoreDislpay","setScoreDislpay","checkForColumnOfFour","i","colummnOfFour","width","decidedColor","isBlank","blank","every","square","forEach","checkForRowOfFour","RowOfFour","includes","checkForColumnOfThree","colummnOfThree","checkForRowOfThree","RowOfThree","dragStart","dragDrop","randomColorArrangement","randomColor","Math","floor","random","push","createBoard","timer","setInterval","randomNumber","moveIntoSquareBelow","clearInterval","dragEnd","squareBeingDraggedId","parseInt","getAttribute","squareBeingReplacedId","validMove","isAColumnOfFour","isARowOfFour","isAColumnOfThree","isARowOfThree","Provider","src","BG","alt","candyColor","draggable","onDragStart","onDragOver","onDragEnter","onDragLeave","onDrop","onDragEnd","FullLeaderBoard","style","textAlign","sort","a","b","scoreA","scoreB","display","justifyContent","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.21c9b7c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LeaderBoard_main__cCs5m\",\"score\":\"LeaderBoard_score__1WWIH\",\"score_link\":\"LeaderBoard_score_link__crpst\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Database_main__2G8Ei\"};","export default __webpack_public_path__ + \"static/media/blank.fbcb9179.png\";","export default __webpack_public_path__ + \"static/media/blue.73120c15.png\";","export default __webpack_public_path__ + \"static/media/Green.599f7016.png\";","export default __webpack_public_path__ + \"static/media/orange.f106b2cd.png\";","export default __webpack_public_path__ + \"static/media/purple-candy.ae25b8a5.png\";","export default __webpack_public_path__ + \"static/media/red-candy.3658b37c.png\";","export default __webpack_public_path__ + \"static/media/yellow-candy.a3d87a9b.png\";","export default __webpack_public_path__ + \"static/media/BG.69605533.png\";","import {createContext} from \"react\";\r\n\r\nexport const ScoreContext = createContext({})","import React,{useContext,useEffect} from 'react'\r\nimport { ScoreContext } from '../Context/ScoreContext'\r\n\r\nconst ScoreBoard = (props) => {\r\n\r\n  const {setDATA,DATA} = useContext(ScoreContext)\r\n  useEffect(() => {\r\n    setDATA({\r\n      ...DATA,\r\n      Score:props.score\r\n    })\r\n  }, [props.score]);\r\n\r\n  return (\r\n    <div className=\"score-board\">\r\n      <h2>Score:{props.score}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScoreBoard\r\n","import React, { useContext} from 'react'\r\nimport axios from 'axios'\r\nimport { ScoreContext } from '../Context/ScoreContext'\r\nimport Styles from './Database.module.css'\r\n\r\n\r\nconst Database = () => {\r\n\r\n  const{DATA, setDATA} =  useContext(ScoreContext);\r\n\r\n  const changeHandler=(e)=>{\r\n    e.preventDefault()\r\n    setDATA({\r\n      ...DATA,\r\n      Username:e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  const submitHandler = (e)=>{\r\n    e.preventDefault()\r\n    axios.post(\"https://candytwist-node-deploy.herokuapp.com/score\",DATA)\r\n    .then(res=>{alert(res.status===200?\"Score added\":\"Something went wrong!\")\r\n  window.location.reload()\r\n  })\r\n    .catch(err=>console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {console.log(DATA)}\r\n      <form className={Styles.main} onSubmit={submitHandler}>\r\n      <input required type=\"text\" onChange={changeHandler} placeholder=\"Enter Username....\" />\r\n      <button type='submit'>Submit Score</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Database\r\n","import axios from 'axios';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Style from './LeaderBoard.module.css'\r\n\r\nconst LeaderBoard = () => {\r\n    const [apidata, setApidata] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://candytwist-node-deploy.herokuapp.com/scoreBoard\").then(res=>setApidata(res.data)).catch(err=>console.log(err))\r\n    }, []);\r\n\r\n  return (\r\n    <div className={Style.main}>\r\n        <p>Leaderboard</p>\r\n        {\r\n            apidata.length?\r\n            apidata.map((val,index)=>{return(\r\n                <div className={Style.score} key ={index}>\r\n                    <p>{val.Username}</p>\r\n                    <p>{val.Score}</p>\r\n                    \r\n                </div>\r\n            )}\r\n            )\r\n            :\"\"\r\n        }\r\n        <div className={Style.score_link}>\r\n            <p onClick={()=>{navigate(\"/leaderBoard\")}}>View Full LeaderBoard</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeaderBoard","//importing hooks\nimport { useState, useEffect } from \"react\";\n//importing images\nimport blank from \"./images/blank.png\";\nimport blueCandy from \"./images/blue.png\";\nimport greenCandy from \"./images/Green.png\";\nimport orangeCandy from \"./images/orange.png\";\nimport purpleCandy from \"./images/purple-candy.png\";\nimport redCandy from \"./images/red-candy.png\";\nimport yellowCandy from \"./images/yellow-candy.png\";\nimport BG from \"./images/BG.png\";\n//components\nimport ScoreBoard from \"./components/ScoreBoard\";\nimport Database from \"./components/Database\";\nimport LeaderBoard from \"./components/LeaderBoard\";\n//context\nimport { ScoreContext } from \"./Context/ScoreContext\";\n\nconst width = 8;\nconst candyColors = [\n  redCandy,\n  blueCandy,\n  purpleCandy,\n  orangeCandy,\n  greenCandy,\n  yellowCandy,\n];\n\nfunction App() {\n  const [currentColorArrangement, setCurrentColorArrangement] = useState([]);\n  const [squareBeingDragged, setSquareBeingDragged] = useState();\n  const [squareBeingReplaced, setSquareBeingReplaced] = useState();\n  const [scoreDislpay, setScoreDislpay] = useState(0);\n\n  const [DATA, setDATA] = useState({\n    Username: \"\",\n    Score: \"\",\n  });\n\n  const createBoard = () => {\n    const randomColorArrangement = [];\n    for (let i = 0; i < width * width; i++) {\n      const randomColor =\n        candyColors[Math.floor(Math.random() * candyColors.length)];\n      randomColorArrangement.push(randomColor);\n    }\n    setCurrentColorArrangement(randomColorArrangement);\n  };\n  const checkForColumnOfFour = () => {\n    for (let i = 0; i <= 39; i++) {\n      const colummnOfFour = [i, i + width, i + width * 2, i + width * 3];\n      const decidedColor = currentColorArrangement[i];\n\n      const isBlank = currentColorArrangement[i] === blank;\n\n      if (\n        colummnOfFour.every(\n          (square) =>\n            currentColorArrangement[square] === decidedColor && !isBlank\n        )\n      ) {\n        setScoreDislpay((score) => score + 4);\n        colummnOfFour.forEach(\n          (square) => (currentColorArrangement[square] = blank)\n        );\n        return true;\n      }\n    }\n  };\n  const checkForRowOfFour = () => {\n    for (let i = 0; i < 64; i++) {\n      const RowOfFour = [i, i + 1, i + 2, i + 3];\n      const decidedColor = currentColorArrangement[i];\n      const notValid = [\n        5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53,\n        54, 55, 62, 63, 64,\n      ];\n      const isBlank = currentColorArrangement[i] === blank;\n\n      if (notValid.includes(i)) continue;\n\n      if (\n        RowOfFour.every(\n          (square) =>\n            currentColorArrangement[square] === decidedColor && !isBlank\n        )\n      ) {\n        setScoreDislpay((score) => score + 4);\n        RowOfFour.forEach(\n          (square) => (currentColorArrangement[square] = blank)\n        );\n        return true;\n      }\n    }\n  };\n  const checkForColumnOfThree = () => {\n    for (let i = 0; i <= 47; i++) {\n      const colummnOfThree = [i, i + width, i + width * 2];\n      const decidedColor = currentColorArrangement[i];\n      const isBlank = currentColorArrangement[i] === blank;\n\n      if (\n        colummnOfThree.every(\n          (square) =>\n            currentColorArrangement[square] === decidedColor && !isBlank\n        )\n      ) {\n        setScoreDislpay((score) => score + 3);\n        colummnOfThree.forEach(\n          (square) => (currentColorArrangement[square] = blank)\n        );\n        return true;\n      }\n    }\n  };\n  const checkForRowOfThree = () => {\n    for (let i = 0; i < 64; i++) {\n      const RowOfThree = [i, i + 1, i + 2];\n      const decidedColor = currentColorArrangement[i];\n      const notValid = [\n        6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64,\n      ];\n      const isBlank = currentColorArrangement[i] === blank;\n\n      if (notValid.includes(i)) continue;\n\n      if (\n        RowOfThree.every(\n          (square) =>\n            currentColorArrangement[square] === decidedColor && !isBlank\n        )\n      ) {\n        setScoreDislpay((score) => score + 3);\n        RowOfThree.forEach(\n          (square) => (currentColorArrangement[square] = blank)\n        );\n        return true;\n      }\n    }\n  };\n\n  const moveIntoSquareBelow = () => {\n    for (let i = 0; i < 64 - width; i++) {\n      const firstRow = [0, 1, 2, 3, 4, 5, 6, 7];\n      const isFirstRow = firstRow.includes(i);\n      if (isFirstRow && currentColorArrangement[i] === blank) {\n        let randomNumber = Math.floor(Math.random() * candyColors.length);\n        currentColorArrangement[i] = candyColors[randomNumber];\n      }\n      if (currentColorArrangement[i + width] === blank) {\n        currentColorArrangement[i + width] = currentColorArrangement[i];\n        currentColorArrangement[i] = blank;\n      }\n    }\n  };\n\n  const dragStart = (e) => {\n    setSquareBeingDragged(e.target);\n  };\n  const dragDrop = (e) => {\n    setSquareBeingReplaced(e.target);\n  };\n\n  useEffect(() => {\n    createBoard();\n  }, []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      checkForColumnOfFour();\n      checkForRowOfFour();\n      checkForColumnOfThree();\n      checkForRowOfThree();\n      moveIntoSquareBelow();\n      setCurrentColorArrangement([...currentColorArrangement]);\n    }, 100);\n    return () => clearInterval(timer);\n  }, [\n    checkForColumnOfFour,\n    checkForRowOfFour,\n    currentColorArrangement,\n    checkForRowOfThree,\n    checkForColumnOfThree,\n  ]);\n\n  const dragEnd = (e) => {\n    const squareBeingDraggedId = parseInt(\n      squareBeingDragged.getAttribute(\"data-id\")\n    );\n    const squareBeingReplacedId = parseInt(\n      squareBeingReplaced.getAttribute(\"data-id\")\n    );\n\n    const validMoves = [\n      squareBeingDraggedId - 1,\n      squareBeingDraggedId - width,\n      squareBeingDraggedId + 1,\n      squareBeingDraggedId + width,\n    ];\n\n    const validMove = validMoves.includes(squareBeingReplacedId);\n\n    console.log(validMove);\n\n    if (validMove) {\n      currentColorArrangement[squareBeingReplacedId] =\n        squareBeingDragged.getAttribute(\"src\");\n      currentColorArrangement[squareBeingDraggedId] =\n        squareBeingReplaced.getAttribute(\"src\");\n\n      const isAColumnOfFour = checkForColumnOfFour();\n      const isARowOfFour = checkForRowOfFour();\n      const isAColumnOfThree = checkForColumnOfThree();\n      const isARowOfThree = checkForRowOfThree();\n\n      if (\n        squareBeingReplacedId &&\n        (isAColumnOfFour || isARowOfFour || isAColumnOfThree || isARowOfThree)\n      ) {\n        setSquareBeingDragged(null);\n        setSquareBeingDragged(null);\n      } else {\n        currentColorArrangement[squareBeingReplacedId] =\n          squareBeingReplaced.getAttribute(\"src\");\n        currentColorArrangement[squareBeingDraggedId] =\n          squareBeingDragged.getAttribute(\"src\");\n        setCurrentColorArrangement([...currentColorArrangement]);\n      }\n    }\n  };\n\n  return (\n    <ScoreContext.Provider value={{ DATA, setDATA }}>\n      <div>\n        <img className=\"imgimg\" src={BG} alt=\"\" />\n      </div>\n      <div className=\"app\">\n        <div className=\"game\">\n          {currentColorArrangement.map((candyColor, index) => (\n            <img\n              key={index}\n              // style={{ backgroundColor: candyColor }}\n              src={candyColor}\n              alt={candyColor}\n              data-id={index}\n              draggable={true}\n              onDragStart={dragStart}\n              onDragOver={(e) => e.preventDefault()}\n              onDragEnter={(e) => e.preventDefault()}\n              onDragLeave={(e) => e.preventDefault()}\n              onDrop={dragDrop}\n              onDragEnd={dragEnd}\n            />\n          ))}\n        </div>\n        <div>\n          <div className=\"scoreboard\">\n            <ScoreBoard score={scoreDislpay} />\n            <Database />\n          </div>\n          <LeaderBoard />\n        </div>\n      </div>\n    </ScoreContext.Provider>\n  );\n}\n\nexport default App;\n","import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FullLeaderBoard = () => {\r\n    const [apidata, setApidata] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://candytwist-node-deploy.herokuapp.com/scoreBoard\").then(res=>setApidata(res.data)).catch(err=>console.log(err))\r\n    }, []);\r\n\r\n  return (\r\n    <div style={{width:\"100%\"}}>\r\n        <p style={{textAlign:\"center\"}}>Leaderboard</p>\r\n        {\r\n            apidata.length?\r\n            apidata.sort(function (a, b) {\r\n                var scoreA = a.Score, scoreB = b.Score\r\n                if (scoreA < scoreB)\r\n                  return -1\r\n                if (scoreA > scoreB)\r\n                  return 1\r\n                return 0\r\n              }).map((val,index)=>{return(\r\n                <div style={{display:\"flex\" ,width:\"100%\",justifyContent:\"space-evenly\"}} key ={index}>\r\n                    <p>{val.Username}</p>\r\n                    <p>{val.Score}</p>\r\n                </div>\r\n            )}\r\n            )\r\n            :\"Loading...\"\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FullLeaderBoard","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport FullLeaderBoard from './components/FullLeaderBoard'\n\nReactDOM.render(\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App/>}/>\n      <Route path=\"/leaderBoard\" element={<FullLeaderBoard/>}/>\n    </Routes>\n  </Router>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}